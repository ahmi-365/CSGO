import React, { useState } from 'react'
import { wallet } from '@/app/utilities/Icons'

type Props = {
    className?: string;
}

export default function UserCurrency({ className = "flex" }: Props) {
    const [walletSwitch, setWalletSwitch] = useState(false)
    const [hiddenWallet, setHiddenWallet] = useState(false)
    const walletAmount = 24.99;
    const cc_rate = 6.395;
    return (
        <div className={`items-center gap-2 ${className}`}>
            <button onClick={() => setWalletSwitch((prev) => !prev)} className={`relative z-1 min-w-10 min-h-6 gradient-border-two ${walletSwitch ? ' [--bg-color:#4E4270]' : '[--gradient:#FFFFFF29] [--bg-color:#ffffff1a]'} rounded-full`}>
                <span className={`absolute transition-all duration-300 ${walletSwitch ? 'left-[calc(100%-20px)]' : 'left-0.5'} top-1/2 -translate-y-1/2 uppercase text-[#171925] text-[10px] size-4.5 flex items-center justify-center bg-white rounded-full font-black`}>{walletSwitch ? 'cc' : '$'}</span>
            </button>
            <button className='flex items-center px-3 justify-center gap-2 rounded-full text-white bg-white/[6%] hover:bg-primary/20 border border-white/[4%] min-w-25 min-h-10'>
                {wallet}
                <span className='block font-bold text-sm text-white min-w-14'>
                    {hiddenWallet ?
                        <span className='translate-y-1 block'>{'*'.repeat(String(walletAmount).length)}</span>
                        :
                        walletSwitch ?
                            (walletAmount / cc_rate).toFixed(3)
                            :
                            (`$${walletAmount.toFixed(2)}`)
                    }
                </span>
                <span className='p-1 -m-1' onClick={() => setHiddenWallet((prev) => !prev)}>
                    {hiddenWallet ?
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fillRule="evenodd" clipRule="evenodd" d="M1.33852 5.06735C1.76155 4.88605 2.25145 5.08201 2.43275 5.50504L1.66679 5.8333C2.43275 5.50504 2.43286 5.50531 2.43275 5.50504L2.43232 5.50404C2.43225 5.50389 2.43208 5.5035 2.43232 5.50404L2.43558 5.51143C2.43892 5.51894 2.44466 5.5317 2.45282 5.54937C2.46915 5.58472 2.49513 5.63962 2.53096 5.71128C2.60268 5.85471 2.71344 6.06451 2.86464 6.31852C3.16797 6.82812 3.62882 7.50684 4.25662 8.18293C4.40459 8.34229 4.56119 8.50088 4.7266 8.65668C4.73352 8.66296 4.74035 8.66938 4.74711 8.67594C5.98434 9.83447 7.71038 10.8333 10.0001 10.8333C11.0076 10.8333 11.8988 10.641 12.6842 10.3318C13.7059 9.92965 14.5623 9.32424 15.2631 8.66639C16.0545 7.92362 16.6358 7.125 17.0195 6.50913C17.2106 6.2024 17.3507 5.94428 17.4417 5.76588C17.4872 5.67677 17.5202 5.60782 17.5411 5.56298C17.5516 5.54056 17.559 5.52419 17.5634 5.51436L17.5675 5.50504C17.7489 5.08224 18.2388 4.8861 18.6617 5.06735C19.0847 5.24864 19.2807 5.73854 19.0994 6.16157L18.3335 5.8333C19.0994 6.16157 19.0995 6.16138 19.0994 6.16157L19.0976 6.16575L19.0946 6.17261L19.0851 6.19414C19.0772 6.21191 19.066 6.23645 19.0517 6.26723C19.023 6.32878 18.9813 6.41542 18.9264 6.52308C18.8167 6.73821 18.6535 7.03837 18.434 7.39053C18.0985 7.92899 17.6268 8.5968 17.0082 9.27021L17.6727 9.93475C17.9982 10.2602 17.9982 10.7878 17.6727 11.1133C17.3473 11.4387 16.8196 11.4387 16.4942 11.1133L15.7941 10.4131C15.3238 10.7929 14.7976 11.1511 14.2133 11.4601L14.8653 12.4621C15.1163 12.8479 15.007 13.3641 14.6213 13.6151C14.2355 13.8661 13.7193 13.7569 13.4683 13.3711L12.6471 12.109C12.0813 12.2825 11.4768 12.4054 10.8335 12.463V13.75C10.8335 14.2102 10.4604 14.5833 10.0001 14.5833C9.53989 14.5833 9.16679 14.2102 9.16679 13.75V12.4631C8.52126 12.4055 7.91695 12.2823 7.35295 12.1094L6.53194 13.3711C6.28094 13.7569 5.76473 13.8661 5.37897 13.6151C4.99321 13.3641 4.88396 12.8479 5.13497 12.4621L5.78697 11.4601C5.20354 11.1513 4.67721 10.7931 4.20638 10.4129L3.50605 11.1133C3.18061 11.4387 2.65297 11.4387 2.32754 11.1133C2.0021 10.7878 2.0021 10.2602 2.32754 9.93475L2.99207 9.27021C2.28791 8.50375 1.77326 7.7435 1.43248 7.171C1.25816 6.87813 1.12804 6.63221 1.04025 6.45663C0.996325 6.36878 0.962905 6.29836 0.939764 6.24826C0.928191 6.2232 0.91918 6.20321 0.912703 6.18865L0.904883 6.17091L0.902389 6.16517L0.901496 6.1631L0.901137 6.16227C0.900982 6.16191 0.900837 6.16157 1.66679 5.8333L0.901137 6.16227C0.719841 5.73924 0.9155 5.24865 1.33852 5.06735Z" fill="white" />
                        </svg>
                        :
                        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M8.12484 10C8.12484 8.96451 8.9643 8.12504 9.99984 8.12504C11.0354 8.12504 11.8748 8.96451 11.8748 10C11.8748 11.0356 11.0354 11.875 9.99984 11.875C8.9643 11.875 8.12484 11.0356 8.12484 10Z" fill="white" />
                            <path fillRule="evenodd" clipRule="evenodd" d="M1.6665 10C1.6665 11.3662 2.02064 11.8263 2.72891 12.7464C4.14314 14.5837 6.51493 16.6667 9.99984 16.6667C13.4847 16.6667 15.8565 14.5837 17.2708 12.7464C17.979 11.8263 18.3332 11.3662 18.3332 10C18.3332 8.63389 17.979 8.17381 17.2708 7.25365C15.8565 5.41634 13.4847 3.33337 9.99984 3.33337C6.51493 3.33337 4.14314 5.41634 2.72891 7.25365C2.02064 8.17381 1.6665 8.63389 1.6665 10ZM9.99984 6.87504C8.27395 6.87504 6.87484 8.27415 6.87484 10C6.87484 11.7259 8.27395 13.125 9.99984 13.125C11.7257 13.125 13.1248 11.7259 13.1248 10C13.1248 8.27415 11.7257 6.87504 9.99984 6.87504Z" fill="white" />
                        </svg>
                    }
                </span>
            </button>
        </div>
    )
}