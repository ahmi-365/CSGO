"use client"

import React, { JSX } from 'react'
import { logo, logout } from '@/app/utilities/Icons';
import { useSearchParams, useRouter, usePathname } from 'next/navigation';
import { MdOutlineClose } from "react-icons/md";
import Link from 'next/link';

interface InnerItem {
    icon: JSX.Element | string;
    name: string;
    path: string;
}
interface MenuItem {
    label?: string;
    items?: InnerItem[];
}

type Props = {
    className?: string;
    onClick?: () => void;
}

export default function Left({ className }: Props) {
    const router = useRouter()
    const pathname = usePathname()
    const searchParams = useSearchParams()
    const menus: MenuItem[] = [
        {
            label: 'Admin Panel',
            items: [
                {
                    icon: (<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M6.35369 3.70733C7.91768 3.08155 8.85065 2.70825 10 2.70825C11.1494 2.70825 12.0823 3.08155 13.6463 3.70733L16.1209 4.69717C16.9164 5.01535 17.5607 5.27306 18.003 5.50493C18.2268 5.62228 18.4436 5.75532 18.6108 5.9157C18.7826 6.08049 18.9583 6.3304 18.9583 6.66659C18.9583 7.00277 18.7826 7.25268 18.6108 7.41747C18.4436 7.57785 18.2268 7.71089 18.003 7.82824C17.5607 8.06011 16.9164 8.31782 16.1209 8.636L13.6463 9.62584C12.0823 10.2516 11.1494 10.6249 10 10.6249C8.85065 10.6249 7.91768 10.2516 6.35369 9.62584L3.87913 8.636C3.08365 8.31783 2.43934 8.06011 1.99706 7.82824C1.77323 7.71089 1.55638 7.57785 1.38918 7.41747C1.21738 7.25268 1.04167 7.00277 1.04167 6.66659C1.04167 6.3304 1.21738 6.08049 1.38918 5.9157C1.55638 5.75532 1.77323 5.62228 1.99706 5.50493C2.43935 5.27305 3.08365 5.01534 3.87914 4.69716L6.35369 3.70733Z" fill="currentColor" />
                        <path fillRule="evenodd" clipRule="evenodd" d="M2.08378 9.53446C2.08378 9.53446 2.08378 9.53446 2.08378 9.53446L2.08261 9.53342L2.08552 9.53595C2.08919 9.53913 2.09602 9.54499 2.10602 9.55334C2.12603 9.57005 2.15869 9.59669 2.20399 9.6317C2.29462 9.70174 2.43575 9.80517 2.62734 9.92942C3.01054 10.1779 3.59516 10.5095 4.38115 10.8239L6.72154 11.76C8.4089 12.435 9.11633 12.7083 10 12.7083C10.8837 12.7083 11.5911 12.435 13.2785 11.76L15.6189 10.8239C16.4048 10.5095 16.9895 10.1779 17.3727 9.92942C17.5643 9.80517 17.7054 9.70174 17.796 9.6317C17.8413 9.59669 17.874 9.57005 17.894 9.55334C17.904 9.54499 17.9108 9.53913 17.9145 9.53595L17.9162 9.53446C17.9167 9.53406 17.9171 9.53366 17.9176 9.53326C18.1746 9.30428 18.5686 9.32616 18.7986 9.58257C19.0291 9.83952 19.0076 10.2347 18.7507 10.4652L18.3333 9.99992C18.7507 10.4652 18.7508 10.465 18.7507 10.4652L18.7495 10.4662L18.7481 10.4675L18.7442 10.4709L18.7328 10.4809C18.7235 10.4889 18.711 10.4996 18.6951 10.5129C18.6634 10.5393 18.6185 10.5759 18.5604 10.6208C18.4441 10.7106 18.275 10.8341 18.0528 10.9782C17.6086 11.2663 16.952 11.6369 16.0831 11.9845L13.7427 12.9206C13.7103 12.9336 13.6782 12.9464 13.6463 12.9592C12.0823 13.585 11.1494 13.9583 10 13.9583C8.85065 13.9583 7.91768 13.585 6.35369 12.9592C6.32183 12.9464 6.2897 12.9336 6.2573 12.9206L3.91691 11.9845C3.04799 11.6369 2.39143 11.2663 1.94719 10.9782C1.72505 10.8341 1.55588 10.7106 1.43964 10.6208C1.38152 10.5759 1.3366 10.5393 1.30489 10.5129C1.28904 10.4996 1.27648 10.4889 1.26722 10.4809L1.2558 10.4709L1.25195 10.4675L1.25048 10.4662L1.24959 10.4654C1.24945 10.4653 1.24933 10.4652 1.66667 9.99992L1.24959 10.4654C0.992642 10.2349 0.970939 9.83952 1.20143 9.58257C1.43146 9.32614 1.82563 9.3044 2.08261 9.53342M2.08378 9.53446C2.08378 9.53446 2.08378 9.53446 2.08378 9.53446V9.53446ZM2.08247 12.8666C1.82549 12.6376 1.43146 12.6595 1.20143 12.9159L2.08247 12.8666ZM2.08247 12.8666L2.08552 12.8693C2.08919 12.8725 2.09602 12.8783 2.10602 12.8867C2.12603 12.9034 2.15869 12.93 2.20399 12.965C2.29462 13.0351 2.43575 13.1385 2.62734 13.2628C3.01054 13.5113 3.59516 13.8428 4.38115 14.1572L6.72154 15.0933C8.4089 15.7683 9.11633 16.0416 10 16.0416C10.8837 16.0416 11.5911 15.7683 13.2785 15.0933L15.6189 14.1572C16.4048 13.8428 16.9895 13.5113 17.3727 13.2628C17.5643 13.1385 17.7054 13.0351 17.796 12.965C17.8413 12.93 17.874 12.9034 17.894 12.8867C17.904 12.8783 17.9108 12.8725 17.9145 12.8693L17.9162 12.8678C17.9167 12.8674 17.9171 12.867 17.9176 12.8666C18.1746 12.6376 18.5686 12.6595 18.7986 12.9159C19.0291 13.1729 19.0076 13.568 18.7507 13.7985L18.3472 13.3487C18.7507 13.7985 18.7508 13.7984 18.7507 13.7985L18.7495 13.7995L18.7481 13.8008L18.7442 13.8042L18.7328 13.8142C18.7235 13.8222 18.711 13.833 18.6951 13.8462C18.6634 13.8727 18.6185 13.9092 18.5604 13.9541C18.4441 14.0439 18.275 14.1675 18.0528 14.3115C17.6086 14.5996 16.952 14.9702 16.0831 15.3178L13.7427 16.2539C13.7103 16.2669 13.6782 16.2798 13.6463 16.2925C12.0823 16.9183 11.1494 17.2916 10 17.2916C8.85065 17.2916 7.91768 16.9183 6.35369 16.2925C6.32183 16.2798 6.2897 16.2669 6.2573 16.2539L3.91691 15.3178C3.04799 14.9702 2.39143 14.5996 1.94719 14.3115C1.72505 14.1675 1.55588 14.0439 1.43964 13.9541C1.38152 13.9092 1.3366 13.8727 1.30489 13.8462C1.28904 13.833 1.27648 13.8222 1.26722 13.8142L1.2558 13.8042L1.25195 13.8008L1.25048 13.7995L1.24959 13.7987C1.24945 13.7986 1.24933 13.7985 1.66667 13.3333L1.24959 13.7987C0.992641 13.5682 0.970939 13.1729 1.20143 12.9159" fill="currentColor" />
                    </svg>),
                    name: 'Cases',
                    path: '/dashboard/cases',
                },
                {
                    icon: (<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M1.04167 17.5C1.04167 17.1548 1.32149 16.875 1.66667 16.875L18.3333 16.875C18.6785 16.875 18.9583 17.1548 18.9583 17.5C18.9583 17.8452 18.6785 18.125 18.3333 18.125L1.66667 18.125C1.32149 18.125 1.04167 17.8452 1.04167 17.5ZM1.04167 2.5C1.04167 2.15482 1.32149 1.875 1.66667 1.875L18.3333 1.875C18.6785 1.875 18.9583 2.15482 18.9583 2.5C18.9583 2.84518 18.6785 3.125 18.3333 3.125L1.66667 3.125C1.32149 3.125 1.04167 2.84518 1.04167 2.5Z" fill="currentColor" />
                        <path d="M3.33334 10C3.33334 11.5714 3.33334 12.357 3.82149 12.8452C4.30965 13.3333 5.09532 13.3333 6.66667 13.3333L13.3333 13.3333C14.9047 13.3333 15.6904 13.3333 16.1785 12.8452C16.6667 12.357 16.6667 11.5714 16.6667 10C16.6667 8.42865 16.6667 7.64298 16.1785 7.15482C15.6904 6.66667 14.9047 6.66667 13.3333 6.66667H6.66667C5.09532 6.66667 4.30965 6.66667 3.82149 7.15482C3.33334 7.64298 3.33334 8.42865 3.33334 10Z" fill="currentColor" />
                    </svg>),
                    name: 'Weapons',
                    path: '/dashboard/weapons',
                },
                {
                    icon: (<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12.9167 6.24992C12.9167 7.86075 11.6108 9.16659 10 9.16659C8.38916 9.16659 7.08333 7.86075 7.08333 6.24992C7.08333 4.63909 8.38916 3.33325 10 3.33325C11.6108 3.33325 12.9167 4.63909 12.9167 6.24992Z" fill="currentColor" />
                        <path d="M15 13.7499C15 15.3607 12.7614 16.6666 10 16.6666C7.23858 16.6666 5 15.3607 5 13.7499C5 12.1391 7.23858 10.8333 10 10.8333C12.7614 10.8333 15 12.1391 15 13.7499Z" fill="currentColor" />
                        <path d="M5.93505 4.16675C6.08293 4.16675 6.2273 4.18126 6.36672 4.20888C6.02708 4.81213 5.83334 5.50848 5.83334 6.25008C5.83334 6.97363 6.01776 7.6541 6.34217 8.24705C6.21038 8.27161 6.07427 8.28447 5.93505 8.28447C4.75637 8.28447 3.80086 7.36269 3.80086 6.22561C3.80086 5.08853 4.75637 4.16675 5.93505 4.16675Z" fill="currentColor" />
                        <path d="M4.53945 15.8217C4.06619 15.256 3.75001 14.5618 3.75001 13.7501C3.75001 12.9632 4.04715 12.2867 4.49649 11.7307C2.90925 11.8538 1.66667 12.7219 1.66667 13.7746C1.66667 14.8371 2.93109 15.7116 4.53945 15.8217Z" fill="currentColor" />
                        <path d="M14.1666 6.25008C14.1666 6.97363 13.9822 7.6541 13.6578 8.24705C13.7896 8.27161 13.9257 8.28447 14.0649 8.28447C15.2436 8.28447 16.1991 7.36269 16.1991 6.22561C16.1991 5.08853 15.2436 4.16675 14.0649 4.16675C13.917 4.16675 13.7726 4.18126 13.6332 4.20888C13.9729 4.81213 14.1666 5.50848 14.1666 6.25008Z" fill="currentColor" />
                        <path d="M15.4605 15.8217C17.0688 15.7116 18.3333 14.8371 18.3333 13.7746C18.3333 12.7219 17.0907 11.8538 15.5035 11.7307C15.9528 12.2867 16.2499 12.9632 16.2499 13.7501C16.2499 14.5618 15.9338 15.256 15.4605 15.8217Z" fill="currentColor" />
                    </svg>),
                    name: 'Users',
                    path: '/dashboard/users',
                },
                {
                    icon: (<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14.4107 1.91083C14.1667 2.1549 14.1667 2.54774 14.1667 3.33341V14.1667C14.1667 14.9524 14.1667 15.3453 14.4107 15.5893C14.6548 15.8334 15.0477 15.8334 15.8333 15.8334C16.619 15.8334 17.0118 15.8334 17.2559 15.5893C17.5 15.3453 17.5 14.9524 17.5 14.1667V3.33341C17.5 2.54774 17.5 2.1549 17.2559 1.91083C17.0118 1.66675 16.619 1.66675 15.8333 1.66675C15.0477 1.66675 14.6548 1.66675 14.4107 1.91083Z" fill="currentColor" />
                        <path d="M8.33333 5.83341C8.33333 5.04774 8.33333 4.6549 8.57741 4.41083C8.82149 4.16675 9.21433 4.16675 10 4.16675C10.7857 4.16675 11.1785 4.16675 11.4226 4.41083C11.6667 4.6549 11.6667 5.04774 11.6667 5.83341V14.1667C11.6667 14.9524 11.6667 15.3453 11.4226 15.5893C11.1785 15.8334 10.7857 15.8334 10 15.8334C9.21433 15.8334 8.82149 15.8334 8.57741 15.5893C8.33333 15.3453 8.33333 14.9524 8.33333 14.1667V5.83341Z" fill="currentColor" />
                        <path d="M2.74408 7.74416C2.5 7.98824 2.5 8.38107 2.5 9.16675V14.1667C2.5 14.9524 2.5 15.3453 2.74408 15.5893C2.98816 15.8334 3.38099 15.8334 4.16667 15.8334C4.95234 15.8334 5.34518 15.8334 5.58926 15.5893C5.83333 15.3453 5.83333 14.9524 5.83333 14.1667V9.16675C5.83333 8.38107 5.83333 7.98824 5.58926 7.74416C5.34518 7.50008 4.95234 7.50008 4.16667 7.50008C3.38099 7.50008 2.98816 7.50008 2.74408 7.74416Z" fill="currentColor" />
                        <path d="M2.5 17.7084C2.15482 17.7084 1.875 17.9882 1.875 18.3334C1.875 18.6786 2.15482 18.9584 2.5 18.9584H17.5C17.8452 18.9584 18.125 18.6786 18.125 18.3334C18.125 17.9882 17.8452 17.7084 17.5 17.7084H2.5Z" fill="currentColor" />
                    </svg>),
                    name: 'Analytics',
                    path: '/dashboard/analytics',
                },
            ]
        }
    ]

const signOut = async () => {
  try {
    const baseUrl = process.env.NEXT_PUBLIC_API_BASE_URL;

    // LocalStorage se uth (user) data nikaalo
    const storedAuth = localStorage.getItem("auth");
    const auth = storedAuth ? JSON.parse(storedAuth) : null;

    await fetch(`${baseUrl}/api/logout`, {
      method: "POST",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${auth?.token}`, // 👈 token send here
      },
      body: JSON.stringify({
        userId: auth?.user?.id, // agar server ko chahiye to user id bhi bhej do
      }),
    });

    // Clear uth only
    localStorage.removeItem("auth");

    // Delete cookie manually (fallback)
    if ("cookieStore" in window) {
      try {
        await window.cookieStore.delete("auth");
      } catch (err) {
        console.error("Failed to delete auth cookie:", err);
      }
    } else {
      document.cookie = "auth=; path=/; max-age=0; SameSite=Lax";
    }

    // Redirect to home
    router.push("/");

  } catch (err) {
    console.error("Logout failed:", err);
  }
};




    const setParams = () => {
        const params = new URLSearchParams(searchParams.toString())
        params.set('mobile_menu', 'false');
        router.push(`${pathname}?${params.toString()}`)
    }


    return (
        <div className={`fixed h-screen top-0 left-0 z-20 lg:z-2 lg:sticky lg:top-16 bg-[#1C1E2A] lg:bg-[#1C1E2A]/30 p-4 md:p-6 border-r border-solid border-white/5 lg:h-[calc(100vh-65px)] overflow-y-auto flex flex-col transition-all duration-300 ${className}`}>
            <div className="flex items-center justify-between md:hidden mb-6">
                <img src="/img/logo.svg" alt="" />
                <button onClick={() => setParams()} className='text-xl size-6 flex items-center justify-center text-white'>
                    <MdOutlineClose />
                </button>
            </div>
            {menus.map((item, index) => (
                <React.Fragment key={index}>
                    <div className='flex items-center justify-between gap-3 mb-5'>
                        <span className='block text-[#6F7083] text-xs font-normal !leading-tight'>{item.label}</span>
                        <div className='grow h-px bg-white/5'></div>
                    </div>
                    <div className="flex flex-col gap-y-2">
                        {item.items?.map((l, i) => (
                            <Link
                                href={l.path}
                                key={i}
                                className={`sidebar-menu flex items-center p-px text-base text-[#6F7083] hover:text-white font-medium min-h-12.5 rounded-xl duration-0 ${pathname === l.path ? 'gradient-border-two shadow-[0_2px_8px_0_rgba(59,188,254,0.32)] text-white' : ''}`}
                            >
                                <span className='items-center gap-3 flex px-5'>
                                    {l.icon} {l.name}
                                </span>
                            </Link>
                        ))}
                    </div>
                </React.Fragment>
            ))}

            <button onClick={() => { router.push('/'); signOut() }} className='flex items-center gap-3 mt-auto text-base font-medium text-[#6F7083] !leading-tight hover:text-white'>
                {logout} Sign Out
            </button>
        </div>
    )
}